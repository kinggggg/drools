package com.learnDrools;

import com.secbro.drools.model.Person


rule "notInTest"

    enabled false

    when
        $p : Person(name not in ("lisi"))
    then
        System.out.println("not in测试");

end

//in中的值如果为布尔值的话
rule "inTest04"

//    enabled false

    when
        $p : Person(marry in (true, false))
    then
        System.out.println("inTest04");

end

//in中的值如果为数字的话，不必用引号
rule "inTest03"

//    enabled false

    when
        $p : Person(age in (18, 30))
    then
        System.out.println("inTest03");

end

//in中的值如果为字符串的话，必须用引号引起来
rule "inTest02"

//    enabled false

    when
        $p : Person(name in ("wangwu", "zhangsan"))
    then
        System.out.println("inTest02");

end

rule "inTest"

//    enabled false

    when
        $p : Person(name in ("wangwu", "zhangsan"))
    then
        System.out.println("in测试");

end


rule "neNullTest"

    enabled false

    when
        $p : Person(name != null)
    then
        System.out.println("!= null测试");

end

rule "eNullTest"

    enabled false

    when
        $p : Person(name == null)
    then
        System.out.println("== null测试");

end

rule "notSoundsLikeTest"

    enabled false

    when
        $p : Person(name not soundslike "world")
    then
        System.out.println("not soundslike测试");

end

rule "soundsLikeTest"

    enabled false

    when
        $p : Person(name soundslike "world")
    then
        System.out.println("soundslike测试");

end

rule "notMatchesTest"

    enabled false

    when
        $p : Person(name not matches "张三")
    then
        System.out.println("not matches测试");

end

rule "matchesTest"

    enabled false

    when
        $p : Person(name matches "张三")
    then
        System.out.println("matches测试");

end

rule "neTest"

    enabled false

    when
        $p : Person((age != 18))
    then
        System.out.println("!=测试");

end

rule "eTest"

    enabled false

    when
        $p : Person((age == 18))
    then
        System.out.println("==测试");

end

rule "leTest"

    enabled false

    when
        $p : Person((age <= 18))
    then
        System.out.println("<=测试");

end

rule "lTest"

    enabled false

    when
        $p : Person((age < 18))
    then
        System.out.println("<测试");

end


rule "geTest"

    enabled false

    when
        $p : Person((age >= 18))
    then
        System.out.println(">=测试");

end

rule "gTest"

    enabled false

    when
        $p : Person((age > 18))
    then
        System.out.println(">测试");

end

rule "小括号测试"

//    enabled false

    when
        $p : Person(((age  ==  18))  &&  ((name  matches  "zhangsan")))
    then
        System.out.println("小括号测试");

end

//1.
rule "项目测试"

//    enabled false

    when
        $p : Person((((name  in  ("hello","zhangsan")))  &&  (age  ==  18))  &&  ((name  matches  "zhangsan")))
    then
        System.out.println("项目测试");

end

//1.
rule "测试Date"

//    enabled false

    when
        $p : Person((bornDate > "27-Oct-2009"))
    then
        System.out.println($p.getBornDate());
        System.out.println("测试Date");

end

//1.写成"true"会自动进行转换
//2.写成1报错
//3.建议不加双引号直接写true或者false
rule "测试boolean"

//    enabled false

    when
        $p : Person((marry == true))
    then
        System.out.println("测试boolean");

end

//1.写成"1" 会自动进行类型转换
//2.建议不加引号直接写
rule "测试byte"

//    enabled false

    when
        $p : Person((gender == 1))
    then
        System.out.println("测试byte");

end

//1.char的常量值写成 双引号或者单引号均可以
//2.单引号IDE报错，但是执行不受影响
//3.双引号不报错
rule "测试char"

//    enabled false

    when
        $p : Person((adult == "1"))
    then
        System.out.println("测试char");

end

rule "test04"

//    enabled false

    when
        $p : Person(age matches 30)
    then

        System.out.println("test04");

end

rule "test03"

//    enabled false

    when
        $p : Person((((age  <  20))  ||  (age  >  18))  &&  ((age  ==  30)))
    then

        System.out.println("test03");

end

rule "test02"

    enabled false

    when
        $p : Person((name == "zhangsan"))
    then
        System.out.println("test02");

end

rule "test01"

//    enabled false

    when
        $p : Person( ((name == "zhangsan") && age == 18) || salary == 100)
    then

        System.out.println("test01");

end

rule "equals-test"

    enabled false

    when
        $p : Person(name == "zhangsan")
    then
        System.out.println("equals-test");
        System.out.println($p.getName());

end


rule "binding-test"

    enabled false

    when
        $p : Person(age == 18) //对象绑定只能绑定一个
    then
        System.out.println("binding-test");
        System.out.println($p.getAge());

end
